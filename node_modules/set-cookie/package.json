{
  "name": "set-cookie",
  "version": "0.0.4",
  "description": "Set a cookie using the same API on both the client and the server.",
  "main": "index.js",
  "scripts": {
    "test": "mocha",
    "browserify": "browserify test/browser/index.js -o test/browser/bundle.js --debug",
    "test-server": "http-server ./test/browser -p 8888 -o",
    "test-browser": "npm run browserify && npm run test-server"
  },
  "keywords": [
    "cookie",
    "set-cookie",
    "isomorphic"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/spikebrehm/set-cookie.git"
  },
  "author": {
    "name": "Spike Brehm",
    "email": "ocelot@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "cookie": "^0.1.2"
  },
  "browser": {
    "./lib/setter/index.js": "./lib/setter/client.js"
  },
  "devDependencies": {
    "mocha": "^1.20.0",
    "chai": "^1.9.1",
    "sinon": "^1.10.0",
    "superagent": "^0.18.0",
    "browserify": "^4.1.6",
    "http-server": "^0.6.1"
  },
  "readme": "set-cookie\n==========\n\nSet a cookie using the same API on both the client and the server.\n\nThe `set-cookie` module exports a function, `setCookie`. It takes two required arguments\nand one optional argument:\n\n```js\nsetCookie(cookieName, cookieValue, options);\n```\n\n## `cookieName`\n### *String*\n\nThe name of the cookie.\n\n## `cookieValue`\n### *String*\n\nThe value of the cookie.\n\n## `options` (optional)\n### *Object*\n\nOptions, such as `path`, `expires`, `domain`. Under the hood, `set-cookie`\nuses the [`cookie`](https://github.com/defunctzombie/node-cookie) module\nto serialize the cookie metadata into a string. Check out that project for the\nfull list of options.\n\nThere is also one special option, `res`, which must be passed in when using\n`set-cookie` from Node. It is an instance of\n[`http.ServerResponse`](http://nodejs.org/api/http.html#http_class_http_serverresponse),\nwhich can come from a simple `http` server or can be a Connect or Express response.\n\n\n# Usage\n\n## Node\n\nIn Node, you must pass `res` as an option in the third argument.\n\n```js\nvar setCookie = require('set-cookie');\n\n// In, for example, an Express middleware.\napp.use(function(req, res, next) {\n  setCookie('myCookie', 'the value of the cookie', {\n    domain: '.example.org',\n    res: res\n  });\n  next();\n});\n```\n\nThis would set the following HTTP header:\n\n    Set-Cookie: myCookie=the%20value%20of%20the%20cookie; Domain=.example.org\n\n## Browser\n\nYou can use a tool like [Browserify](http://browserify.org) to package up `set-cookie`,\nwhich uses the CommonJS module format, for use by a browser.\n\n```js\nvar setCookie = require('set-cookie');\n\nsetCookie('myCookie', 'the value of the cookie', {\n  domain: '.example.org'\n});\n```\n\nThis would mutate `document.cookie` behind the scenes:\n\n```js\ndocument.cookie = 'myCookie=the%20value%20of%20the%20cookie; Domain=.example.org'\n```\n\n# License\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/spikebrehm/set-cookie/issues"
  },
  "_id": "set-cookie@0.0.4",
  "dist": {
    "shasum": "0fb207a6dd3e1159341936d05d61080b429dbbcd"
  },
  "_from": "set-cookie@",
  "_resolved": "https://registry.npmjs.org/set-cookie/-/set-cookie-0.0.4.tgz"
}
